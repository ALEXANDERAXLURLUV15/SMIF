# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Jul 25 00:10:13 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))
