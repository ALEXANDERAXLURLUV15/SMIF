# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Jul 28 11:13:47 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))